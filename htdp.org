* issue to lookout
https://github.com/greghendershott/racket-mode/issues/125#issue-68735629


#+begin_quote
Everyone can design programs
everyone can experience ths satisfaction that comes with creative design

program design--but "Not Programming"--deserves the same role in a
liberal arts education as mathematics and language skills.
#+end_quote

* Systematic Program Design:: ~The Basic steps of a function design recipe~
1. =From Problem Analysis to Data Definitions=
   * Identify the information that must be represented and how it is
     represented in the chosen programming language. Formulate data
     definitions and illustrate them with examples.
2. =Signature, Purpose Statement, Header=
   * State what kind of data the desired function consumes and
     produces. Formulate a concise answer to the question ~what~ the
     function computes. Define a stub that lives up to the signature.
3. =Functional Examples=
   * Work through examples that illustrate the function's purpose.
4. =Function Template=
   * Translate the data definitions into an outline of the function.
5. =Function Definition=
   * Fill in the gaps in the funciton template. Expliot the purpose
     statement and the examples.
6. =Testing=
   * Articulate the examples as tests and ensure that the function
     passes all. Doing so discovers mistakes. Tests also supplement
     examples in that they help others read and understand the
     definition when the need arises--and it will arise for any
     serious program
